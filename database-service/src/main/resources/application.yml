spring:
  application:
    name: database-service
  # 配置中心配置--------开始
  cloud:
    config:
      name: exploit, database-service #文件前缀名称
      profile: config-dev # 服务环境名称 例如 {name}-{profile} = exploit-config.yml
      discovery:
        enabled: true # 是否启用服务发现
        service-id: config-server # 配置中心的服务id,即spring.application.name
      username: user
      password: password123
  # 配置中心配置---------结束
  datasource:
    name: test
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.10.40:3307/fire_control?setUnicode=true&characterEncoding=utf8
    username: xf
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
mybatis:
  typeAliasesPackage: com.zr.model
  mapperLocations: classpath:mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true # 开启自动驼峰命名规则映射
# 将sql打印在控制台
logging:
  level:
    com.zr.modules: DEBUG #    com.zr.modules为mapper接口的包位置