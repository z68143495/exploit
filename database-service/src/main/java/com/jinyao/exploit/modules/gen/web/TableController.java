/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.jinyao.exploit.modules.gen.web;

import com.jinyao.exploit.common.entity.BaseController;
import com.jinyao.exploit.common.entity.Page;
import com.jinyao.exploit.common.entity.User;
import com.jinyao.exploit.common.utils.StringUtils;
import com.jinyao.exploit.common.utils.UserUtils;
import com.jinyao.exploit.modules.gen.entity.Table;
import com.jinyao.exploit.modules.gen.service.TableService;
import com.jinyao.exploit.modules.gen.util.GenUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;

/**
 * 业务表Controller
 * @author ThinkGem
 * @version 2013-10-15
 */
@Controller
@RequestMapping(value = "${adminPath}/gen/table")
public class TableController extends BaseController {

	@Autowired
	private TableService tableService;
	
	@ModelAttribute
	public Table get(@RequestParam(required=false) String id) {
		if (StringUtils.isNotBlank(id)){
			return tableService.get(id);
		}else{
			return new Table();
		}
	}
	
	@RequestMapping(value = {"list", ""})
	public String list(Table table, HttpServletRequest request, HttpServletResponse response, Model model) {
		User user = UserUtils.getUser();
		if (!user.isAdmin()){
			table.setCreateBy(user);
		}
        Page<Table> page = tableService.findPage(new Page<>(request, response), table);
        model.addAttribute("page", page);
		return "modules/gen/tableList";
	}

	@RequestMapping(value = "form")
	public String form(Table table, Model model) {
		// 获取物理表列表
		List<Table> tableList = tableService.findTableListFormDb(new Table());
		model.addAttribute("tableList", tableList);
		// 验证表是否存在
		if (StringUtils.isBlank(table.getId()) && !tableService.checkTableName(table.getName())){
			addMessage(model, "下一步失败！" + table.getName() + " 表已经添加！");
			table.setName("");
		}
		// 获取物理表字段
		else{
			table = tableService.getTableFormDb(table);
		}
		model.addAttribute("table", table);
		model.addAttribute("config", GenUtils.getConfig());
		return "modules/gen/tableForm";
	}

	@RequestMapping(value = "save")
	public String save(Table table, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, table)){
			return form(table, model);
		}
		// 验证表是否已经存在
		if (StringUtils.isBlank(table.getId()) && !tableService.checkTableName(table.getName())){
			addMessage(model, "保存失败！" + table.getName() + " 表已经存在！");
			table.setName("");
			return form(table, model);
		}
		tableService.save(table);
		addMessage(redirectAttributes, "保存业务表'" + table.getName() + "'成功");
		return "redirect:" + adminPath + "/gen/table/?repage";
	}
	
	@RequestMapping(value = "delete")
	public String delete(Table table, RedirectAttributes redirectAttributes) {
		tableService.delete(table);
		addMessage(redirectAttributes, "删除业务表成功");
		return "redirect:" + adminPath + "/gen/table/?repage";
	}

}
