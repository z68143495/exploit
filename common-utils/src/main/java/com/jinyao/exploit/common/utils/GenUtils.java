//package com.jinyao.exploit.common.utils;
//
//import java.io.File;
//import java.text.SimpleDateFormat;
//import java.util.Date;
//import java.util.Map;
//
///***********************************************************************
// * 文件说明：基于本项目的代码生成器
// * 创建信息：李晋 2019/04/29 17:24
// * 变更履历：
// ***********************************************************************/
//public class GenUtils {
//
//    private static final String MODULES_PATH = "com/zbnm/modules/";  // 模块路径
//    private static final String JAVA_PATH = "/src/main/java/";  // java目录路径
//    private static final String RESOURCES_PATH = "/src/main/resources/";  // resources目录路径
//    private static final String WEB_APP_PATH = "/src/main/webapp/";  // webapp目录路径
//    private static final String BASE_DAO_PATH = "com.zbnm.modules.sys.dao.BaseDao";  // BaseDao路径
//    private static final String BASE_SERVICE_PATH = "com.zbnm.modules.sys.service.BaseService";  // BaseService路径
//    private static final String BASE_SERVICE_IMPL_PATH = "com.zbnm.modules.sys.service.impl.BaseServiceImpl";  // BaseServiceImpl路径
//
//    /**
//     * 文件类型
//     *      1:dao文件
//     *      2:entity文件
//     *      3:service文件
//     *      4:serviceImpl文件
//     *      5:controller文件
//     *      6:mapper文件
//     *      7:ftl页面文件
//     *      8:ftl页面的js文件
//     */
//    private static final int FILE_TYPE_DAO = 1;  // dao文件
//    private static final int FILE_TYPE_ENTITY = 2;  // entity文件
//    private static final int FILE_TYPE_SERVICE = 3;  // service文件
//    private static final int FILE_TYPE_SERVICE_IMPL = 4;  // serviceImpl文件
//    private static final int FILE_TYPE_CONTROLLER = 5;  // controller文件
//    private static final int FILE_TYPE_MAPPER = 6;  // mapper文件
//    private static final int FILE_TYPE_PAGE = 7;  // ftl页面文件
//    private static final int FILE_TYPE_PAGE_JS = 8;  // ftl页面的js文件
//
//    /**
//     * 文件生成
//     * @param genTable
//     */
//    public static void generate(GenTable genTable) throws Exception {
//        //生成Mapper文件
//        generateMapperFile(genTable);
//        //生成ftl页面文件
//        generatePageFile(genTable);
//        //生成ftl页面的js文件
//        generatePageJsFile(genTable);
//        //生成服务层接口文件
//        generateServiceInterfaceFile(genTable);
//        //生成服务实现层文件
//        generateServiceImplFile(genTable);
//        //生成Controller层文件
//        generateControllerFile(genTable);
//        // 生成dao文件
//        generateDaoFile(genTable);
//        // 生成entity文件
//        generateEntityFile(genTable);
////        // 生成excel导出文件
////        generateExcelFile(genTable);
//    }
//
////    /**
////     * 生成excel导出文件
////     * @param genTable
////     */
////    private static void generateExcelFile(GenTable genTable) {
////
////    }
//
//    /**
//     * 生成实体类文件
//     * @param genTable
//     * @throws Exception
//     */
//    private static void generateEntityFile(GenTable genTable) throws Exception{
//        generateFileByTemplate("entity.ftl",new File(joinPath(genTable, FILE_TYPE_ENTITY)),genTable, FILE_TYPE_ENTITY);
//    }
//
//    /**
//     * 生成dao文件
//     * @param genTable
//     * @throws Exception
//     */
//    private static void generateDaoFile(GenTable genTable) throws Exception{
//        generateFileByTemplate("dao.ftl",new File(joinPath(genTable, FILE_TYPE_DAO)),genTable, FILE_TYPE_DAO);
//    }
//
//    /**
//     * 生成service接口
//     * @param genTable
//     * @throws Exception
//     */
//    private static void generateServiceInterfaceFile(GenTable genTable) throws Exception{
//        generateFileByTemplate("service.ftl",new File(joinPath(genTable, FILE_TYPE_SERVICE)),genTable, FILE_TYPE_SERVICE);
//    }
//
//    /**
//     * 生成service实现类
//     * @param genTable
//     * @throws Exception
//     */
//    private static void generateServiceImplFile(GenTable genTable) throws Exception{
//        generateFileByTemplate("serviceImpl.ftl",new File(joinPath(genTable, FILE_TYPE_SERVICE_IMPL)),genTable, FILE_TYPE_SERVICE_IMPL);
//    }
//
//    /**
//     * 生成controller
//     * @param genTable
//     * @throws Exception
//     */
//    private static void generateControllerFile(GenTable genTable) throws Exception{
//        generateFileByTemplate("controller.ftl",new File(joinPath(genTable, FILE_TYPE_CONTROLLER)),genTable, FILE_TYPE_CONTROLLER);
//    }
//
//    /**
//     * 生成mapper文件
//     * @param genTable
//     * @throws Exception
//     */
//    private static void generateMapperFile(GenTable genTable) throws Exception{
//        generateFileByTemplate("mapper.ftl",new File(joinPath(genTable, FILE_TYPE_MAPPER)),genTable, FILE_TYPE_MAPPER);
//    }
//
//    /**
//     * 生成ftl页面文件
//     * @param genTable
//     * @throws Exception
//     */
//    private static void generatePageFile(GenTable genTable) throws Exception{
//        generateFileByTemplate("page.ftl",new File(joinPath(genTable, FILE_TYPE_PAGE)),genTable, FILE_TYPE_PAGE);
//    }
//
//    /**
//     * ftl页面的js文件
//     * @param genTable
//     * @throws Exception
//     */
//    private static void generatePageJsFile(GenTable genTable) throws Exception{
//        generateFileByTemplate("pageJs.ftl",new File(joinPath(genTable, FILE_TYPE_PAGE_JS)),genTable, FILE_TYPE_PAGE_JS);
//    }
//
//    /**
//     * 文件生成
//     * @param templateName  模板名
//     * @param file  需要生成的文件
//     * @param genTable   数据
//     * @param fileType  文件类型（dao、service等）
//     * @throws Exception
//     */
//    private static void generateFileByTemplate(final String templateName, File file, GenTable genTable, int fileType) throws Exception{
//        generateFileByTemplate(templateName, file, genTable, fileType, null);
//    }
//
//    /**
//     * 文件生成
//     * @param templateName  模板名
//     * @param file  需要生成的文件
//     * @param genTable   数据
//     * @param fileType  文件类型（dao、service等）
//     * @param extraParamMap   额外参数
//     * @return  返回其他模板文件需要调用的参数（比如dao文件需要引用entity文件的package），以便存入实体，方便调用
//     * @throws Exception
//     */
//    private static void generateFileByTemplate(final String templateName, File file, GenTable genTable, int fileType, Map<String, Object> extraParamMap) throws Exception{
//        // 把表、列数据转变为map形式
//        Map dataMap = Maps.beanToMap(genTable);
//        // 放入package路径
//        dataMap.put("package", MODULES_PATH.replaceAll("/", ".") + genTable.getModules());
//        // 放入生成时间
//        dataMap.put("createDate", new SimpleDateFormat("yyyy/MM/dd").format(new Date()));
//        // 放入RequestMapping路径（js路径前缀一样）
//        dataMap.put("mapping", genTable.getModules().replaceAll("\\.", "/"));
//        // 放入基类路径
//        dataMap.put("baseDaoPath", BASE_DAO_PATH);
//        dataMap.put("baseServicePath", BASE_SERVICE_PATH);
//        dataMap.put("baseServiceImplPath", BASE_SERVICE_IMPL_PATH);
//        // 放入额外参数
//        if(extraParamMap != null){
//            dataMap.putAll(extraParamMap);
//        }
//        // 生成文件
//        CodeGenerateUtils.generateFileByTemplate(templateName, file, dataMap);
//    }
//
//
//
//    /**
//     * 拼接文件的路径
//     * @param genTable   实体类中包含类名，模块名等
//     * @param fileType  文件类型（dao、service等）
//     * @return
//     */
//    public static String joinPath(GenTable genTable, int fileType){
//        return joinPath(genTable.getModules(), fileType, genTable.getEntityName());
//    }
//
//    /**
//     * 拼接文件的路径
//     * @param modules   模块名
//     * @param fileType  文件类型（dao、service等）
//     * @param entityName    实体名
//     * @return
//     */
//    public static String joinPath(String modules, int fileType, String entityName){
//        // 文件类型
//        String fileTypePath;
//        // 后缀
//        String suffix;
//        switch (fileType){
//            case FILE_TYPE_DAO:
//                fileTypePath = "dao";
//                suffix = "Dao.java";
//                break;
//            case FILE_TYPE_ENTITY:
//                fileTypePath = "entity";
//                suffix = ".java";
//                break;
//            case FILE_TYPE_SERVICE:
//                fileTypePath = "service";
//                suffix = "Service.java";
//                break;
//            case FILE_TYPE_SERVICE_IMPL:
//                fileTypePath = "service/impl";
//                suffix = "ServiceImpl.java";
//                break;
//            case FILE_TYPE_CONTROLLER:
//                fileTypePath = "controller";
//                suffix = "Controller.java";
//                break;
//            case FILE_TYPE_MAPPER:
//                fileTypePath = "";
//                suffix = "Dao.xml";
//                break;
//            case FILE_TYPE_PAGE:
//                fileTypePath = "";
//                suffix = ".ftl";
//                break;
//            case FILE_TYPE_PAGE_JS:
//                fileTypePath = "";
//                suffix = ".js";
//                break;
//            default:
//                fileTypePath = "";
//                suffix = "";
//        }
//        // 项目中，不同文件不同路径
//        String middlePath;
//        String modulesPath;
//        if(fileType <= 5){
//            // 1 2 3 4 5为java文件
//            middlePath = JAVA_PATH;
//            modulesPath = MODULES_PATH;
//        }else if(fileType == 6){
//            // 6 是mapper文件
//            middlePath = RESOURCES_PATH;
//            modulesPath = "/mapper/modules/";
//        }else if(fileType == 7){
//            // 7 是ftl页面文件
//            middlePath = WEB_APP_PATH;
//            entityName = StringUtils.uncapitalize(entityName);
//            modulesPath = "/WEB-INF/views/modules/";
//        }else if(fileType == 8){
//            // 8 是ftl页面的js文件
//            middlePath = WEB_APP_PATH;
//            entityName = StringUtils.uncapitalize(entityName);
//            modulesPath = "/statics/js/modules/";
//        }else {
//            middlePath = "";
//            modulesPath = "";
//        }
//        return PathUtils.getProjectPath() + middlePath + modulesPath + modules.replaceAll("\\.", "/") + "/" + fileTypePath + "/" + entityName + suffix;
//    }
//
//    /**
//     * 获取文件类型路径（模块文件下的4个文件夹，即controller文件夹  dao文件夹  entity文件 service文件夹）
//     * @param fileType  文件类型（dao、service等）
//     * @return  文件类型路径
//     */
//    private static String getFileTypePath(int fileType){
//        String fileTypePath = "";
//        switch (fileType){
//            case FILE_TYPE_DAO:
//                fileTypePath = "dao";
//                break;
//            case FILE_TYPE_ENTITY:
//                fileTypePath = "entity";
//                break;
//            case FILE_TYPE_SERVICE:
//                fileTypePath = "service";
//                break;
//            case FILE_TYPE_SERVICE_IMPL:
//                fileTypePath = "service/impl";
//                break;
//            case FILE_TYPE_CONTROLLER:
//                fileTypePath = "controller";
//                break;
//            default:
//                fileTypePath = "";
//        }
//        return fileTypePath;
//    }
//
//    public static void main(String[] args) throws Exception {
//        String sql = "select " +
//                "PK_CORP \"公司代码\"," +
//                "ORG_NAME \"公司名称\"," +
//                "PK_INV_BAS_DOC \"原料代码\"," +
//                "INV_NAME \"原料名称\"," +
//                "CONTROL_TYPE \"管控分类\" " +
//                "from ";
//        GenTable genTable = new GenTable("scm.purchaseStrategy", "ImportantOrgInv", sql, "重点公司原料表");
//        // 非必填项
//        genTable.setCanImport("1"); // 是否能导入，0否 1是
//        genTable.setTableName("T_MRP_REP_IMPORTANT_ORG_INV"); // 表名，用于单表维护
//        genTable.setSearchByOrg("1"); // 是否根据公司查询（0：不可以  1：根据公司pk_corp  2:根据公司名称）默认不可以
//        genTable.setSearchByPkInvBasDoc("1"); // 是否根据原料查询（0：不可以  1：可以）默认不可以
////        genTable.setSearchByLine("1"); // 是否根据线路查询（0：不可以  1：可以）默认不可以
////        genTable.setSearchByDate("1"); // 是否根据时间查询（0：不可以  1：单个时间  2:开始时间和结束时间）默认不可以
////        genTable.setCanDetail("1"); // 是否能下钻（0：不可以  1：可以）默认不可以
////        genTable.setSearchDateColumn(""); // 需要查询的时间字段
//        // 如果能导入，则必须填入tableName
//        if("1".equals(genTable.getCanImport()) && StringUtils.isBlank(genTable.getTableName())){
//            System.out.println("如果能导入，则必须填入tableName");
//            return;
//        }
//        generate(genTable);
//    }
//}
