package com.jinyao.exploit.common.utils;

import org.apache.commons.codec.binary.Base64;

import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

/**
 * aes加密方法	
 * 
 * @author chenxu
 * @date 2018年5月10日 上午10:54:50
 *
 */
public class AESEncryption {

	private final static String KEY = "1234123412341324";
	private final static String IV = "1234123412341324";

	/**
	 * 使用默认秘钥加密
	 */
	public static String encrypt(String srcStr) {
		try {
			Cipher cipher = Cipher.getInstance("AES/CBC/NoPadding");
			int blockSize = cipher.getBlockSize();
			byte[] dataBytes = srcStr.getBytes("utf-8");
			int plaintextLength = dataBytes.length;
			
			if (plaintextLength % blockSize != 0) {
				plaintextLength = plaintextLength + (blockSize - (plaintextLength % blockSize));
			}
			byte[] plaintext = new byte[plaintextLength];
			System.arraycopy(dataBytes, 0, plaintext, 0, dataBytes.length);
			SecretKeySpec keyspec = new SecretKeySpec(KEY.getBytes("utf-8"), "AES");
			IvParameterSpec ivspec = new IvParameterSpec(IV.getBytes("utf-8"));
			cipher.init(Cipher.ENCRYPT_MODE, keyspec, ivspec);
			
			byte[] encrypted = cipher.doFinal(plaintext);
			return new String(Base64.encodeBase64(encrypted));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	/**
	 * 使用默认秘钥解密
	 */
	public static String decrypt(String desStr) {

		try {
			byte[] encrypted1 = Base64.decodeBase64(desStr.getBytes("utf-8"));
			Cipher cipher = Cipher.getInstance("AES/CBC/NoPadding");
			SecretKeySpec keyspec = new SecretKeySpec(KEY.getBytes("utf-8"), "AES");
			IvParameterSpec ivspec = new IvParameterSpec(IV.getBytes("utf-8"));
			
			cipher.init(Cipher.DECRYPT_MODE, keyspec, ivspec);
			byte[] original = cipher.doFinal(encrypted1);
			
			String originalString = new String(original,"utf-8").trim();
			return originalString;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	public static void main(String[] args) {

		System.out.println(AESEncryption.encrypt("654321"));
		System.out.println(AESEncryption.decrypt(AESEncryption.encrypt("654321")));
	}

}
