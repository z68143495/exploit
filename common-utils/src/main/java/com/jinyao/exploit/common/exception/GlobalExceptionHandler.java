package com.jinyao.exploit.common.exception;

import com.jinyao.exploit.common.base.entity.BaseResult;
import com.jinyao.exploit.common.enums.ResponseCode;
import org.springframework.validation.BindException;
import org.springframework.validation.ObjectError;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.stream.Collectors;

/**
 * 全局异常处理：@ControllerAdvice + @ExceptionHandler 使用 GlobalExceptionHandler 全局处理 Controller 层异常的示例
 */
@ControllerAdvice
public class GlobalExceptionHandler {
//    private static final Logger LOGGER = LoggerFactory.getLogger(GlobalExceptionHandler.class);

    /**
     * 处理入参时，参数校验异常
     *
     * @param e
     * @return
     */
    @ExceptionHandler(BindException.class)
    @ResponseBody
    public BaseResult handleException(BindException e) {
//        LOGGER.error(e.getMessage(), e);
        // 获取错误信息
        String msg = e.getAllErrors().stream().map(ObjectError::getDefaultMessage).collect(Collectors.joining("，"));
        return BaseResult.result(ResponseCode.CODE_400, ":" + msg);
    }

}