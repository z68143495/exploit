package com.jinyao.exploit.common.exception;

import com.jinyao.exploit.common.base.BaseConfig;
import com.jinyao.exploit.common.base.entity.BaseResult;
import com.jinyao.exploit.common.enums.ResponseCode;
import com.jinyao.exploit.common.utils.JsonUtils;
import com.jinyao.exploit.common.utils.JwtUtils;
import com.jinyao.exploit.common.utils.SpringContextHolder;
import com.jinyao.exploit.common.utils.StringUtils;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

/**
 * token验证拦截器
 */
public class CheckTokenInterceptor implements HandlerInterceptor {

    private BaseConfig baseConfig = SpringContextHolder.getBean(BaseConfig.class);

    /**
     * 目标方法执行之前执行
     *
     * @param request
     * @param response
     * @param handler
     * @return
     */
    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws IOException {
        String token = JwtUtils.getTokenByAuthorization(request.getHeader(JwtUtils.AUTHORIZATION));
        // token不存在或失效，则返回错误吗410，剔除auth项目
        if(!baseConfig.getIsAuth()){
            if (StringUtils.isBlank(token) || !JwtUtils.verifyToken(token)) {
                response.setHeader("Content-Type", "application/json;charset=UTF-8");
                response.getWriter().write(JsonUtils.getInstance().toJson(BaseResult.result(ResponseCode.CODE_410)));
                return false;
            }
        }
        return true;
    }

    @Override
    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) {

    }

    @Override
    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {

    }
}